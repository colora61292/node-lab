var fs = require('fs');
var env = require('configs/env');
var config = require('configs/'+env);

exports.env = function(){
    return env;
}

exports.config = function(){
    return config;
};

exports.initApp = function (app) {
    //require('classes/database').init(this.config().database.connectionString);
    this.loadController(app, 'controllers/', '');
};

exports.makeMessages = function(){
    var messages = {};
    fs.readdirSync('messages/').forEach(function(name){
        messages[name] = require('messages/'+name);
    });
    return messages;
};

exports.makeController = function(Controller, action){
    return function(req, res){
        var controller = new Controller(req, res);
        controller.beforeAction();
        controller.actions[action].handle.apply(controller,[controller]);
        controller.afterAction();
        controller = null;
    };
};

exports.loadController = function(app, controllerRoot, relativeDir){
    var this_ = this;
    var dir = controllerRoot + relativeDir;
    fs.readdirSync(dir).forEach(function(name){
        if (fs.statSync(dir+name).isDirectory()){
            this_.loadController(app, controllerRoot, relativeDir+name+'/');
        }else{
            name = name.replace('.js','');
            var Controller = require(dir+name);
            Controller.prototype.Model = require(dir.replace('controllers','models')+name);
            Controller.prototype.pathInfo = relativeDir+name;
            //Controller.prototype.cacheClient = redisClient;
            for(var action in Controller.prototype.actions){
                if (Controller.prototype.actions.hasOwnProperty(action)) {
                    var page = Controller.prototype.actions[action];
                    if(typeof page.method != 'undefined' &&
                        typeof page.handle != 'undefined'
                        ){
                        for(var url in config.route){
                            if(config.route[url] == relativeDir+name+'.'+action){
                                app[page.method](url, this_.makeController(Controller, action));
                            }
                        }
                    }
                }
            }
        }
    });
};

exports.makeRedisClient = function(){
    var redis = require('redis');
    return redis.createClient(config.cache.port,config.cache.host,{auth_pass:config.cache.password});
}

exports.makeKueQueue = function(){
    //load redis job Q
    var redis = require('redis');
    var kue = require('kue');
    kue.redis.createClient = function() {
        var client = redis.createClient(config.cache.port,config.cache.host,{auth_pass:config.cache.password});
        //client.auth('password');
        return client;
    };
    return kue.createQueue();
    //TODO
}